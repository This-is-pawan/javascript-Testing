

######## ARRAY
$$$$$$$$$$$$$$$$$$$$
##  it is a string method split it is use for make Array from string
let a ='this';
let b = a.split('');  
console.log(b);
$$$$$$$$$$$$$$$$$$$$

1}Array use for multiple value or data store 
2}const a=new Array() this is use for add new value in Arrays 
and this Array also use loop for multiple store value from user with the help of   prompt and delete ary[0]
ary[0]='Happy'
console.log(a)
3} multiple dimensional Arrays
e.g let a [
["happy","web development" ,40000],
["sham","App development" ,80000],
["harry","front end" ,30000],
];

###### ARRAY METHODS OR FUNCTIONS
1)sort() it is use for alphabatic order
e.g let a =['sanjay','sham','aman','karan']

2)reverse() it is use for alphabatic order reverse
e.g let a =['sanjay','sham','aman','karan']

3)pop('')it is use for remove from last in given Array normally use this syntax pop() 
e.g let a =['sanjay','sham','aman','karan']

4)push('')it is use for add from last in given Array normally use this syntax push()
e.g let a =['sanjay','sham','aman','karan']

5)shift()it is use for remove from first in given Array use  this syntax push()
e.g let a =['sanjay','sham','aman','karan']

6)unshift()it is use for add from first in given Array use this syntax unshift('any string value')
e.g let a =['sanjay','sham','aman','karan']

7)concat()  it is use for merge the any string and Array 
e.g let a =['sanjay','sham','aman','karan']
let b=a.concat('sanjay','sham'in this brases phase a variable);
console.log(b)

8) join() is use for different value in Array merge in one string or make a one string 
e.g let a =['sanjay','sham','aman','karan']
let d= a.join('/'use any symbols);
console.log(d)

9) slice(start , end) it is use for get value form given Array make new Array
e.g let a =['sanjay','sham','aman','karan']
let d= a.slice(2,3 or use also -ve no );or a.slice(2);
console.log(d)



10)splice(start , end) splice(index , howmany delete or use , 'new value' value use with -ve )  it is use for get value form center  given Array make new Array
e.g let a =['sanjay','sham','aman','karan']
let d= a.splice( 1,0 ,'karan' ,) or for delete a.splice( 1,1 ,'karan' ,)or a.splice( 1,1);
console.log(d)


11)isArray() chekout for given data or value is a Array or not
 it is also use for conditions 
 e.g let a =['sanjay','sham','aman','karan']
Array.isArray(a);

12)indexOf('search item',start jahan se search karni)it is start from first
e.g let a =['sanjay','sham','aman','karan',sanjay]
 indexOf('karn') get index no.

13)lastIndexOf('search item',start jahan se search karni)
it is start from last 
e.g let a =['sanjay','sham','aman','karan',sanjay]
 lastIndexOf('karn') get index no.

14) includes() all types of value chekout exist or not use in conditions

15)some()chekout only one  value pass this test than true e.g var ages =[20,39, 38,84];
let bi= ages.some(adult)
function adult(age){
return age>=85
}

get true or flase
16)every() chekout every value pass this test than  true e.g var ages =[20,39, 38,84];
let bi= ages.every(adult)
function adult(age){
return age>=85
}

get true or flase
17) find()
e.g
let ages =[20,39, 38,84]; 
var adultage=18;

ages>=adultage =>20 print
first elelment in an ary that pass a test 
18) filter() e.g
let ages =[20,39, 38,84]; 
var adultage=18;
ages>=adultage =>20 print
Every condition that is passed will create a new ary. It is used slong with the condition

19) toString() any arry convert into string 

20)fill('tiger') same name fill in an arrays

21)forEach() This will run for every value in existed array and in this , you  do not need a for loop due to extra step

$$$$$$$$$$
{forEach loop use for Arrays and for in loop use for Objects 
continue and break is use in  loop for(var a=1; a<=10; a++){
if(a==3)
console.log("hey"+a+<br>)
break and continue use in it 
}
console.log("number"+a+<br>)

}
}
$$$$$$$$$$$$$

22)map() use for any array if you make changes to the current object, it return a new array to us 

##### OBJECT
1)var person = new Object(); it is same as Array
person.name='ram';
person.age=34;
console.log(person.name)both will be same result
console.log(person['name'])both will be same result
2)Array of Object aak ary mai Object
const  variable is use one time but in arry method like const a=[20,39,89];
a[0]=89; it is work properly and same in Objects


3) for in loop use for Objects
 a is a current object
for(let i in a ){
document.write(a[key] or a[value] or use key that to print the entire Object )
}

and other method search and write in notes 
#### STRING METHODS

1)str.length it is also count space 
e.g let text='this is a code of js' 
e.g
let a = str.length
console.log(a)
2) includes() all types of value checkout exist or not use in conditions


3)startWith()
e.g
let text='this is a code of js' 
let a = str.startWith('this' in same character machs than written true)
console.log(a)

4)search('bad');
search gives us the index value of the string present if it does not match then it return -1

5) match (/is/g) it is use to make a ary  same no. of character with special syntax 
e.g
let text='this is a code of js' 

let a = str.match (/is/g) in g is globally in given string 
console.log(a)
6)replace() it will change the word in string

7)trim() it remove a space  

8)charAt()
e.g
let text='this is a code of js' 

let a = str.charAt(3) in g is globally in given string 
console.log(a)

9) charCodeAt(3) it is write a sky code no.
et a = str.charCodeAt(3) in g is globally in given string 
console.log(a)

10) String.fromCharCode(9)
it is write a sky code character

11)concate()  it is use for merge the any string and Array 
e.g let a =['sanjay','sham','aman','karan']
let b=a.concat('sanjay','sham'in this brases phase a variable);
console.log(b)

##########split(),repeat(),slice(),substr(),substring(),toString(),valueOf()

12)subStr(2,5) is  same as slice
substring(2,7) is same as  slice but 7 is not count
 13) toString() convert into string

########### NUMBER METHODS
1) number()any string no. is     convert inti no. 

 2)parseInt() it is write a first any Integer(string) value with number
Integer means without decimal 
3)parseFloat(),
same as parseInt() but also write  a decimal no.

4)isFinite(),use for conditions Number.isFinite()

5)isInteger(),use for conditions
Number.isInteger()
6)toFixed(), 
let a=5.555;
let num=a.toFixed(2 (it is chages also)) mean of 2 is only 2 digit after decimal 



7)toPrecision(3(it is chages also) )it round of or approx value like 56.789 =>56.8 or (3) 56.7898 =>56.79


######## MATH METHODS
1)ceil(1.45)both have same work it give upper value print 2 
ceil(-1.45)both have same work print -1 

2)floor(1.45)both have same work it give downward value 
print 1

3)round(2.50) print 3and round(2.40) print 2

4)trunc(2.49) print 2 it give a without decimal

5)max(x,y,z,....,n)
e.g max(6,89,23) print 89 only

6)min(x,y,z,....,n)
e.g max(6,89,23) print 6 only
7)sqrt()
8)cbrt()
9)pow(x,y) 4 ki power 2 print 16
10)random()
11)abs(2+5) written absolute value print 7
12)PI()

############# DATA METHODS
let now = new Date () write a object and use in different operations

1)toDateString()
2)getDate()
3)getFullYear()
4)getMonth()
5)getDay()
6)getHours()
7)getMinutes()
8)getSeconds()
9)getMilliseconds()
10)setDate()
11)setFullYear()
12)setHours()
13)setMilliseconds()
14)setMinutes()
15)setMonth()
16)setSeconds()



############ DOM 
console.log(document); write a arry

document.all[0]
document.head
document.title
document.body
document.links
document.links[2]
 use for all anchor
 etc...


########DOM get METHODS

1)innerText 
2)innerHTML 
3)getAttribute
e.g
document.querySelector('id'use # or 'class'use .).getAttributes('id'or 'class' find both) written only id and class name (value)



3)getAttributeNode
e.g
document.querySelector('id'use # or 'class'use .).getAttributeNode('id'or 'class' find both){ if get value then use .value syntax.
 }
 it is write a complete node with value.


4)Attributes

e.g
document.querySelector('id'use with  # or 'class'use .).Attributes[1].value
 
document.querySelector('id'use # or 'class'use with. ).Attributes[1].name
 it is get  a Object all Attributes

if get value then use [index it print with name and it value also if,if get value then use .value syntax. and  ] syntax.
get also name of Attributes

########DOM set METHODS
1)innerHTML
2)innerText
3)setAttribute
4)Attribute
4)removeAttribute

e.g 
document.querySelector('id'use # or 'class'use with. ).innerText='This is a code of javascript'

document.querySelector('id'use # or 'class'use with. ).innerHTML='<p>This is a code of javascript </p>'

document.querySelector('id'use # or 'class'use with. ).setAttribute('class','container' or 'id','container' or 'data-id','2' etc )


document.querySelector('id'use # or 'class'use with. ).removeAttribute(name of any Attribute which you want to remove)


 ###############  These are not used today , use following ###########
document.querySelector() target first only Attribute 
document.querySelectorAll()target all Attributes

########### DOM css styling METHODS
1)style

2)className use for set 
document.querySelector('.h1').className='abc' multiple add  but  the last attribute will get the highest prefrence  
 they get a string value

3)classList multiple class add 

they get a arry value
there 6 kids of following   
 add(multiple class)
 remove(multiple class)
 toggle( class)
 contains( class) this is write a boolean value use in condition
 item(index) use with classList.item(index)
 length


###### Events 
use 
document.querySelector('.h1').onclik =name
fuction name(){
.style.color='yellow'
}
document.querySelector('.h1').addEventListener('click'()=>{
},true or flase it is use for do you want to click on someone first )
this.addEventListener('click'arrow or function use in it)

 do you want to   remove  event  than use   
  remove.addEventListener(event,fuction)


####### Traversal METHODS

######## NOTE: WHAT IS A node ?
Ans=> HTML DOM standard , everything in an HTML documentis a node:The entire document is a document node . Every HTML elelment is an elelment node. The text inside HTML elelment are text nodes . Every HTML attribute is an attribute node(deprecated)  



1)parentNode

2)parentElement

3)Children

4)ChildrenNodes

5)firstChild

6)firstElementChild

7)lastChild

8)lastElementSibling

9)nextSibing

10)nextElementSibing

11)previousElementSibling

12)previousSibling


##### cloneNode(true or flase ) flase is copy of elelment and attribute not text but true is all the copy of elelment 

#### hasAttribute()
this is use for chek any id or class present in before and after write a true or flase
and hasChildNodes() same as above this element is present (ChildNodes) this will count a space also

#######
isequalNode() 1)same node type e.g p,h1
2)same nodeName type
3)same NodeValue 
4)same childNodes
5)same Attribute
6)same Attribute value

######## form events 
some improtant
1)Oninput()work on input
2)Onblur()work on input
3)Onchange() select item and input
4)Onselect()work on input
5)invalid() input black then message to alert you
6)onrezsize()
##############setInterval(()

clearInterval()
=>{},Milliseconds
)



##########  BOM  #######
BOM=>(browser object model)
work of BOM following ---
1)get width & height of browser window
2)open & close browser window
3)move & resize browser window
4)scroll to browser window
5)get URL , Hostname , protocol of browser window
6)get history of browser window

#### 1}innerHeight=> viewport height

2}innerWidth=> viewport width

3}outerHeight=> not count scroll height
 
4}outerWidth=> window Width
not count scroll width

##### window open & close methods
 let r=window.open(URL,name(_blank,_parent,_self,_top),specs("width=100px ,height=100px",left,top yaa app set kar sakta hai))
r.close()


##### window moveby& moveto methods
let r=window.open(URL);
r.moveTo(left ,right) this is work like  position absolute 
let r=window.open(URL);
r.moveBy(left ,right) this is work like  position relative
 ###### resizeTo() window height and width is change
resizeTo() add actual height and width
#### window.scrollTo()
#### window.scrollBY()

############# location object properties (means some url vallue get and set both ) ###########
e.g 1)location.href='www.youTube.com';
2)location.resload()
3)location.assign('www.youTube.com')
4)location.replace('www.youTube.com') page history not exist

console.log(location)
########### history Objects properties no. of pages 1)length
2)back() 
3)forward() 
4)go(one value is used in one time) both forward and back
########### window pageYOfset()how many px scroll the page
########### pageXOfset()how many px scroll the page
###### events
Online use with addEventListener('Online')
Ofline
also use (navigator.onLine) this os write boolean

$#######clipboard event ######'
when user copy, paste or cut any txt than target
cut(onecut) 
copy(onecopy)
paste(onepaste)

##########
keydown()
screenX()use with all events
screeny()use with all events
pageX()use with all events
pagey()use with all events
clientX() mouse position chekout
clientY() mouse position chekout

#######$$$$$$$$$##############
###### JAVASCRIPT ADVANCE #####
netscape 1996 na ecma ko apna javascript daa diya tha  E6 version 
why need beacause use in framework like 
Reactjs ,Nodejs , Angular

### rest operator [...]
this make an array 
sum('any string ',39,59,89) 
sum(name,...arg) 
...arg use in last not first and center
(aap ko no. ka sum karvna hai but string nehi chiya) what if you want to sum two no. and you don't want the string value? use rest operator 
#### spread operator
this is spread the value
e.g
fuction sum(name,...arg)it is a rest operator only{
}
let arr=[38,89,90,78] (NOTE:if use close brases than convert into a arry without brases will consider a single-single value )
sum('yahoo',...arg) it is use in calling  this is spread the value but rest operator will consider it is a sigle value

if concate any arry than use the and its  change squance also e.g 1) [...arg ,  ...arg]
2) [45,...arg ,...arg,89] same with objects

####### object literals 
old version 
let firstname = 'happy'
let lastname = 'singh'
let obj={
firstname: firstname,
lastname:lastname,
}
new version
1)
let firstname = 'happy'
let lastname = 'singh'
let obj={
firstname,
lastname,
}
new version
2)
let firstname = 'happy'
let lastname = 'singh'
let obj={
[firstname (in this brases concat also)]:firstname,
[lastname]:lastname,
show:fuction(){
console.log(this.firstname)
}
}
new version
3)
let firstname = 'happy'
let lastname = 'singh'
let obj={
[firstname (in this brases concat also)]:firstname,
[lastname]:lastname,
show(){ without fuction word use it
console.log(this.firstname)
}
}
console.log(obj.show())
console.log(obj.['show']()) both wil take same result

######### Destructuring array and object will be same   
old version 
 let user=['yahoo baba',45];
 let name =user[0];
 let name =age[0];
 new version
 let [name,age] =user
 let [name,...age] =user
 use in fuctions as a arrguments


 ###### OOP object oriented programming
 it is a coding methodology/style/pattern
short and reusable well orgaized code 
easier to debug 
it is based on class and  object
 
 Type of methods 
 1)constructor  it is call automatic use syntax constructor{
 console.log('any')
 }
 2)prototype it is not call automatic use syntax message{
 console.log('any')
 }

 3)static it is use without object       (use syntax)   static hello() {
 console.log('any')
 }
 

 // Output: "Message: John"


hello is a class &  a is a object & message is a method use multiple methods

class hello {
    constructor(name, age) {
        this.Name = name; // 'this' is used to refer to the object's property
        console.log('Constructor called');
    }

    message() {
        console.log('Message: ' + this.Name); // 'this' is used to refer to the object's property
    }
    static stacimethod(){
    console.log('Message')
    }
}

let a = new hello('John', 25); // Pass arguments to the constructor
a.message();
hello.stacimethod()// syntax
######## inheritance class A and class B 
 both  properties & methods use with each other.
1)extends
fruits class kooo use karna hai vegetables class main tooo extends kaa use karai gaa

class fruits {
constructor(name){

console.log('fruits'+name) // print undefined 
}


console.log('fruits'+name)
}
}  
class vegetables extends fruits {
super()
constructor(name){
console.log('fruits'+name)// this is work properly but above Constructor not work beacause not use super()

}
}


let a= new vegetables('happy');
&&&&
 use prototype
class fruits {
constructor(name){
this.n=name;
console.log('fruits') //
}
info(){
console.log('fruits'+n.name) 
}
 
class vegetables extends fruits {

info(){
super().info();
console.log('fruits'+n.name) 
}
}

let a =new vegetables('happy')
a.info()
###########
e.g
class Hello {
    constructor(name, age, salary) {
        this.Name = name;
        this.age = age;
        this.salary = salary;
        console.log('Constructor called');
    }

    message() {
        document.write(`
            <h3>Employee Class</h3>
            Name: ${this.Name}<br>
            Age: ${this.age}<br>
            Salary: ${this.salary}<br>
        `);
    }
}

class Test extends Hello {
    info() {
        let ta = 1000;
        let pa = 1000;
        let total = this.salary + ta + pa;
        document.write(`
            <h3>Employee Info</h3>
            Name: ${this.Name}<br>
            Age: ${this.age}<br>
            Total Salary: ${total}<br>
        `);
    }
}

let a = new Test('John', 25, 80000); 
a.message();
a.info();

########## 
$$$$$$$$$$$$$$$$$$$$$$

######  MODULES    ######

MODULES use for files attach with each other Export and Inport

syntax 
type='moduel' in script tag
1}export let name ='happy'
import {name(use multiple)}from './filename'
 document.write(name)

2}export default fuction(){
}
import {default as you}from './filename';
document.write(you())
3}2}export default fuction(){
}
import you from './filename';
document.write(you())

###}in MODULES the code  is not easylly run beacause need live server  Xampp or Wamp server or live server in extension use in vs code
###[Note: for rename use e.g userName as uN
userName koo uN write kar sakta hain
AND use 
 import * as name(any) from "./file"
 star is respresent the all code funtions , variable , etc
 document.write(name.message)
 document.write(let a =new name.message())


]
######### Ajax   (with jquery )
(asynchronous javascript and xml)
webpage fast and dynamic  without html, css ,js, load only specific work
###  how to work ajax 

######  strict mode
kei bar hama error ka patta nahi chalta 
syntax 
"use strict"
a=10
console.log(a)
####################
NOTE:object is basically  declear two ways literals{key value payer} and  constructor
when make the constructor object is  term called singleton mean object  but not in 
literals
##concat the object than use this syntax .assign({optional this curley brases},obj1,obj2)
## .key()
## .value()
{
this block knonw as scope 
}
##chaining 1) .map().map().filter()
         2) .map().map()
         3) .map().filter()
         etc
#### reduce()
const myNum =[1,2,3,4];
const to= myNum.reduce(fuction(accumilator,currval){
console.log(`accumilator :${accumilator} and currval:${currval}`)
},0) 
console.log(to) //print 
acc(short name):0  and currval(currentValue)
### immediately invoked fuction 
expression (IIFE)
it use child  global scope mai koi error na banaa payaa  (fuction into fuction)

(fuction chai()){
chai is a name 
})(); this is call semi colon is use 
for send execution
((n)=>{
console.log(`db connected two ${name}`)
})('happy')
#####################
## conditions
for 1) flase => 0,-0,BigInt 0n,"",null,undefined,NaN
for 2) true "0", 'flase',"",[],{},fuction(){}

nullish coalescing operator (??): null undefined use in database





